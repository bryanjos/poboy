grammar PoBoy
  
  rule body
    (assignment / function / identifier / float / integer / string / space )* <Body>
  end

  rule assignment
    identifier space? '=' space? (identifier / float / integer / string) <Assignment>
  end

  rule function
    'fn' space identifier space? ( '(' space? ( argument ( space? ',' argument )* )? space? ')' )? space? ':' space? type space? '{' body '}' <Function>
  end

  rule argument
    identifier ':' type <Argument>
  end

  rule type
    [A-Z*] [a-zA-Z0-9_\=\*]* <Type>
  end

  rule integer
    ('+' / '-')? [0-9]+ <IntegerLiteral>
  end
  
  rule float
    ('+' / '-')? [0-9]+ (('.' [0-9]+) / ('e' [0-9]+)) <FloatLiteral>
  end
  
  rule string
    '"' ([^"\\] / "\\" . )* '"' <StringLiteral>
  end
  
  rule identifier
    [a-zA-Z\=\*] [a-zA-Z0-9_\=\*]* <Identifier>
  end

  rule newline
    [\n]+
  end

  rule space
    [\s]+
  end
end